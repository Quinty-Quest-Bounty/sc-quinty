/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DisputeResolver,
  DisputeResolverInterface,
} from "../../../contracts/DisputeResolver.sol/DisputeResolver";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isExpiry",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DisputeInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "topRanks",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "distributions",
        type: "uint256[]",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RewardDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rankedSubIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputes",
    outputs: [
      {
        internalType: "uint256",
        name: "bountyId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isExpiry",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEnd",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "getDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "bountyId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isExpiry",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEnd",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_voteIndex",
        type: "uint256",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "rankedSubIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bountyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slashAmount",
        type: "uint256",
      },
    ],
    name: "initiateExpiryVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bountyId",
        type: "uint256",
      },
    ],
    name: "initiatePengadilanDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quintyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_quintyAddress",
        type: "address",
      },
    ],
    name: "setQuintyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_rankedSubIds",
        type: "uint256[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234607957331560635760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055611c19908161007f8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80631d74ed72146112e9578063438596321461128e57806349330cb8146111865780634faffcc414610fe857806354e3aedb14610fbf578063564a565d14610f5d5780637055d36814610a80578063715018a614610a275780637d36f4d314610a095780638da5cb5b146109e0578063965e46cc146108f5578063a438d208146108d7578063c2b7b868146101ec578063cb1c2b5c146101cb578063e3a96cbd1461015e5763f2fde38b0361000e5734610159576020366003190112610159576100e961132c565b6100f161166f565b6001600160a01b0316801561014357600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461015957602036600319011261015957600435600052600260205260c0604060002080549060ff600182015416906002810154600382015490600460ff6005850154169301549360405195865215156020860152604085015260608401521515608083015260a0820152f35b34610159576000366003190112610159576020604051655af3107a40008152f35b3461015957602036600319011261015957600435610208611698565b806000526002602052604060002060038101544211806108c8575b15610892576004810180541561085d5761023c826116dc565b91600681018351906001600160401b03821161084757600160401b821161084757805482825580831061081e575b506020850190600052602060002060005b83811061080a5750505050610290835161163d565b9160ff60018301541660001461056057506102c46002820154600a810491816102bf60148594049485926116cf565b6116cf565b508451610329575b50610312926005836102f26103209488600080516020611ba483398151915299976119e1565b01600160ff19825416179055604051938493604085526040850190611358565b908382036020850152611358565b0390a260018055005b60018060a01b036004541660008454604461034389611609565b5191604051948593849263b7ed707160e01b8452600484015260248301525afa9081156105545760009161041e575b50600080516020611ba483398151915295936102f261032094610312979460059460018060a01b0316600080808085855af16103ac6119b1565b506103c1575b505094505093955050926102cc565b600080516020611bc4833981519152608060405184815260406020820152601c60408201527f546f70206e6f6e2d77696e6e657220736f6c76657220726577617264000000006060820152a261041686611609565b528a806103b2565b903d8082843e61042e818461138c565b82019060e08383031261051857610447602084016113f6565b9260408101516001600160401b0381116105505783610467918301611425565b5060808101516001600160401b03811161055057810183601f82011215610550578051602080610496836113ad565b6104a3604051918261138c565b838152019160051b8301019185831161054c5760208101915b83831061051b575050505060a0810151916001600160401b0383116105185750946103129794600594610508600080516020611ba48339815191529b99956102f2956103209a01611425565b5094509497509450509395610372565b80fd5b82516001600160401b0381116105485760209161053d89848094870101611425565b8152019201916104bc565b8680fd5b8480fd5b8280fd5b6040513d6000823e3d90fd5b60009391938081808454915b8281106107be57508060011b9080820460021490151715610696571191826107a0575b5050156106da575060048054845460405163ee8c4bbf60e01b815292830152909290600090849060249082906001600160a01b03165afa928315610554576000936106ac575b5060028401549060508202918083046050148115171561069657600080516020611ba48339815191529561063d600a60059361031298606461032098049060018060a01b031690600080808084865af161062d6119b1565b50610642575b50500486836119e1565b6102f2565b6080600080516020611bc48339815191529160405190815260406020820152601960408201527f50656e676164696c616e2063726561746f7220726566756e64000000000000006060820152a28b80610633565b634e487b7160e01b600052601160045260246000fd5b6106ca9193503d806000833e6106c2818361138c565b810190611492565b50505050505050505091856105d5565b939160005b855481101561077e57806106f5600192886113c4565b508281019081548061070b575b505050016106df565b600080808093888060a01b038654165af16107246119b1565b50610730575b80610702565b6080600080516020611bc483398151915291858060a01b03905416925460405190815260406020820152600c60408201526b14dd185ad9481c99599d5b9960a21b6060820152a2878061072a565b50610312929450610320906005600080516020611ba4833981519152956102f2565b8091925060011b90808204600214901517156106965711868061058f565b6107c881876113c4565b509360026107db600187015480936115fc565b9501546107ec575b5060010161056c565b610803906107fd60019397946115ed565b936115fc565b94906107e3565b60019060208451940193818401550161027b565b8160005282602060002091820191015b81811061083b575061026a565b6000815560010161082e565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152600d60248201526c139bc81d9bdd195cc818d85cdd609a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d4e6f74207265736f6c7661626c6560901b6044820152606490fd5b5060ff60058201541615610223565b346101595760003660031901126101595760206040516203f4808152f35b346101595761090336611342565b6004546001600160a01b031633036109a4576109206003546115ed565b918260035582600052600260205260406000209080825560018201600160ff198254161790558260028301556203f480420192834211610696576005837f24eeedcb46801528fd7bb716940d605a484dbc7fa512e1d575779c8d02e1c21995600360609601550160ff198154169055604051918252600160208301526040820152a2005b60405162461bcd60e51b815260206004820152601460248201527313db9b1e48145d5a5b9d1e4818dbdb9d1c9858dd60621b6044820152606490fd5b34610159576000366003190112610159576000546040516001600160a01b039091168152602090f35b34610159576000366003190112610159576020600354604051908152f35b3461015957600036600319011261015957610a4061166f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6040366003190112610159576004356024356001600160401b038111610159573660238201121561015957806004013590610aba826113ad565b91610ac8604051938461138c565b8083526024602084019160051b8301019136831161015957602401905b828210610f4d57505050610af7611698565b816000526002602052604060002060ff6005820154161580610f3f575b15610f0757655af3107a40003410610eb8576003825103610e7357600781019060018060a01b0333166000528160205260ff60406000205416610e3e57600480548254604051630f7c499760e31b815292830152602090829060249082906001600160a01b03165afa90811561055457600091610e0c575b5060005b60038110610db557505060005b60038110610d30575060040160405190608082018281106001600160401b038211176108475760405233825260208201348152604083019085825260608401924284528054600160401b81101561084757610bfd916001820181556113c4565b949094610d1a575184546001600160a01b0319166001600160a01b03919091161784555160018401555180519060028401906001600160401b03831161084757600160401b8311610847578154838355808410610cf1575b5060200190600052602060002060005b838110610cdd57845160038701553360008181526020898152604091829020805460ff19166001179055905191825260609082018190528a917f9c8bb00b268853720e548a9181f5f3e3a09c0f4d13c180964b91753a1edc2465918190610cce9082018d611358565b3460408301520390a260018055005b600190602084519401938184015501610c65565b8260005283602060002091820191015b818110610d0e5750610c55565b60008155600101610d01565b634e487b7160e01b600052600060045260246000fd5b60018101808211610696575b60038110610d4d5750600101610b9d565b610d578286611616565b51610d628287611616565b5114610d7057600101610d3c565b60405162461bcd60e51b815260206004820152601e60248201527f4475706c69636174652072616e6b696e6773206e6f7420616c6c6f77656400006044820152606490fd5b81610dc08287611616565b511015610dcf57600101610b90565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081cdd589b5a5cdcda5bdb881251605a1b6044820152606490fd5b90506020813d602011610e36575b81610e276020938361138c565b81010312610159575185610b8c565b3d9150610e1a565b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d7573742072616e6b2065786163746c792033207375626d697373696f6e73006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d696e696d756d20302e3030303120535454207374616b6520726571756972656044820152601960fa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601060248201526f4469737075746520696e61637469766560801b6044820152606490fd5b506003810154421115610b14565b8135815260209182019101610ae5565b3461015957602036600319011261015957600435600052600260205260a0604060002080549060ff60018201541690600281015460ff600560038401549301541692604051948552151560208501526040840152606083015215156080820152f35b34610159576000366003190112610159576004546040516001600160a01b039091168152602090f35b34610159576020366003190112610159576004805460405163ee8c4bbf60e01b8152823592810183905290600090829060249082906001600160a01b03165afa8015610554576000809260009261115b575b506001600160a01b0316330361111657156110db5761105a6003546115ed565b91826003558260005260026020526040600020908082556001820160ff1981541690558260028301556203f480420192834211610696576005837f24eeedcb46801528fd7bb716940d605a484dbc7fa512e1d575779c8d02e1c21995600360609601550160ff198154169055604051918252600060208301526040820152a2005b60405162461bcd60e51b8152602060048201526013602482015272109bdd5b9d1e481b9bdd081c995cdbdb1d9959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c792063726561746f722063616e206469737075746500000000000000006044820152606490fd5b91505061117391503d806000833e6106c2818361138c565b505050959394505050509091908461103a565b346101595761119436611342565b816000526002602052600460406000200154811015611254576111c691600052600260205260046040600020016113c4565b5060018060a01b038154166001820154916003600282019101549060405190816020825491828152019160005260206000209060005b81811061123e57505050906112168161123493038261138c565b60405194859485526020850152608060408501526080840190611358565b9060608301520390f35b82548452602090930192600192830192016111fc565b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840ecdee8ca40d2dcc8caf60731b6044820152606490fd5b34610159576040366003190112610159576024356001600160a01b038116810361015957600435600052600260205260076040600020019060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101595760203660031901126101595761130261132c565b61130a61166f565b600480546001600160a01b0319166001600160a01b0392909216919091179055005b600435906001600160a01b038216820361015957565b6040906003190112610159576004359060243590565b906020808351928381520192019060005b8181106113765750505090565b8251845260209384019390920191600101611369565b90601f801991011681019081106001600160401b0382111761084757604052565b6001600160401b0381116108475760051b60200190565b80548210156113e05760005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b51906001600160a01b038216820361015957565b6001600160401b03811161084757601f01601f191660200190565b81601f820112156101595780519061143c8261140a565b9261144a604051948561138c565b828452602083830101116101595760005b82811061147057505060206000918301015290565b8060208092840101518282870101520161145b565b5190811515820361015957565b61014081830312610159576114a6816113f6565b9260208201516001600160401b03811161015957836114c6918401611425565b926040830151926060810151926114df60808301611485565b9260a08301516001600160401b03811161015957830181601f820112156101595780519061150c826113ad565b9161151a604051938461138c565b80835260208084019160051b8301019184831161015957602001905b8282106115dd575050509261154d60c08201611485565b9260e0820151926101008301516001600160401b0381116101595783019080601f83011215610159578151611581816113ad565b9261158f604051948561138c565b81845260208085019260051b82010192831161015957602001905b8282106115c5575050506101206115c2919301611485565b90565b602080916115d2846113f6565b8152019101906115aa565b8151815260209182019101611536565b60001981146106965760010190565b9190820180921161069657565b8051156113e05760200190565b80518210156113e05760209160051b010190565b8181029291811591840414171561069657565b90611647826113ad565b611654604051918261138c565b8281528092611665601f19916113ad565b0190602036910137565b6000546001600160a01b0316330361168357565b63118cdaa760e01b6000523360045260246000fd5b6002600154146116a9576002600155565b633ee5aeb560e01b60005260046000fd5b8054156113e057600052602060002090600090565b9190820391821161069657565b90600482018054801561199357600480549454604051630f7c499760e31b81529182015293602090859060249082906001600160a01b03165afa9384156105545760009461195f575b5061172f8461163d565b9160005b8281106118a6575050506080906040519361174e838661138c565b60038552601f1983018036602088013761176b604051948561138c565b6003845236602085013760005b8181106117f85750505060009060005b600381106117cc57505061179b8161163d565b9060005b8181106117ad575090925050565b806117ba60019287611616565b516117c58286611616565b520161179f565b6117d68183611616565b516117e4575b600101611788565b916117f06001916115ed565b9290506117dc565b60005b6003811061180d575b50600101611778565b6118178285611616565b516118228287611616565b5110611830576001016117fb565b60025b8181116118665750908061185f60019361184d8388611616565b51611858828a611616565b5289611616565b5290611804565b6000198101818111610696578061188061188b9289611616565b51611858848a611616565b51611896828a611616565b5280156106965760001901611833565b6118b081836113c4565b506002810180546001909201549190819060005b8381106118d8575050505050600101611733565b60008382101561194b578281526020902081015460038281039060009082116119375750906119306119298c61192384655af3107a400061191c8d60019a9961162a565b0492611616565b516115fc565b918c611616565b52016118c4565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b81526032600452602490fd5b90936020823d60201161198b575b8161197a6020938361138c565b810103126105185750519238611725565b3d915061196d565b505090506040516119a560208261138c565b60008152600036813790565b3d156119dc573d906119c28261140a565b916119d0604051938461138c565b82523d6000602084013e565b606090565b9192908051158015611b9b575b611b95576119fd600091611609565b519160005b600485018054821015611a6c5781611a19916113c4565b506002810185815415159182611a52575b5050611a3a575b50600101611a02565b6001919382611a4b920154906115fc565b9290611a31565b611a5d9192506116ba565b90549060031b1c148538611a2a565b50509381159485611b8d5760005b600486018054821015611b835781611a91916113c4565b506002810186815415159182611b69575b5050611ab2575b50600101611a7a565b611ac060018201548561162a565b600089611b5557509160019186600494049081611ae1575b50509150611aa9565b600080808085888060a01b038654165af1611afa6119b1565b5015611ad8576080600080516020611bc483398151915291858060a01b039054169260405190815260406020820152601460408201527310dbdc9c9958dd081d9bdd195c881c995dd85c9960621b6060820152a23880611ad8565b634e487b7160e01b81526012600452602490fd5b611b749192506116ba565b90549060031b1c148638611aa2565b5050945050505050565b945050505050565b50915050565b5083156119ee56fe7170a86bb6fa1f343d7a468f3df24038b413acd4f5538958e1ea43d022105e6849649141d16971a88c3cfdd73fec34babb1cf163cf8b804c8f537a023c6ce506a264697066735822122029f317067a549d668fae841185a204233c4e2e632ecdd87a08fa72be9f070a2564736f6c634300081c0033";

type DisputeResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisputeResolver__factory extends ContractFactory {
  constructor(...args: DisputeResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DisputeResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DisputeResolver__factory {
    return super.connect(runner) as DisputeResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeResolverInterface {
    return new Interface(_abi) as DisputeResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DisputeResolver {
    return new Contract(address, _abi, runner) as unknown as DisputeResolver;
  }
}
