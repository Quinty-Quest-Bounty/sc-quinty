/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IQuinty,
  IQuintyInterface,
} from "../../../contracts/DisputeResolver.sol/IQuinty";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getBounty",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowMultipleWinners",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "winnerShares",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "slashPercent",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "slashed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bountyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_subId",
        type: "uint256",
      },
    ],
    name: "getSubmission",
    outputs: [
      {
        internalType: "uint256",
        name: "bountyId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        internalType: "string",
        name: "blindedIpfsCid",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "replies",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "revealIpfsCid",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bountyId",
        type: "uint256",
      },
    ],
    name: "getSubmissionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IQuinty__factory {
  static readonly abi = _abi;
  static createInterface(): IQuintyInterface {
    return new Interface(_abi) as IQuintyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IQuinty {
    return new Contract(address, _abi, runner) as unknown as IQuinty;
  }
}
